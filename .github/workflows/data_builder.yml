name: Data Builder

on:
  push:
    branches:
      - development
    paths:
      - 'tool/downloads/summary.csv'
jobs:
  build:
    name: Convert csv to data.json
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          ref: ${{ steps.extract_branch.outputs.branch }}
      - name: Download cases.csv
        uses: carlosperate/download-file-action@v1.0.3
        id: download_cases_csv
        with:
            file-url: 'https://docs.google.com/spreadsheets/d/1YnOrlX4Bvp2vuPGikBhhoT8oboqhv02D-8WYOuOeZuA/gviz/tq?tqx=out:csv&sheet=confirmed_cases'
            file-name: 'cases.csv'
            location: 'tool/downloads'
      - name: Download status.csv
        uses: carlosperate/download-file-action@v1.0.3
        id: download_status_csv
        with:
            file-url: 'https://docs.google.com/spreadsheets/d/1xO4JrQRv90ybfwQWiDL9JBvvxl8j_iRTbMbJsjUWzFo/gviz/tq?tqx=out:csv&sheet=status'
            file-name: 'status.csv'
            location: 'tool/downloads'
      - name: Download prefectures.csv
        uses: carlosperate/download-file-action@v1.0.3
        id: download_prefectures_csv
        with:
            file-url: 'https://raw.githubusercontent.com/kaz-ogiwara/covid19/master/data/prefectures.csv'
            file-name: 'prefectures.csv'
            location: 'tool/downloads'
      - name: Print the file path
        run: |
          echo "The file was downloaded to ${{ steps.download_csv.outputs.file-path }}"
          tail ${{ steps.download_csv.outputs.file-path }}
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "tool/downloads/summary.csv, tool/downloads/cases.csv, tool/downloads/status.csv, tool/downloads/prefectures.csv"
      - name: Run composer install
        run: |
          cd tool
          composer install
      - name: Convert csv to data.json
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo All files exists!
          php tool/convert.php
      - run: yarn install --frozen-lockfile
      - run: yarn run test
      - run: yarn run generate:deploy
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add tool/downloads
          git add data
          git commit -m "[BOT] Update cases.csv, status.csv, prefectures.csv, data.json"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.extract_branch.outputs.branch }}
